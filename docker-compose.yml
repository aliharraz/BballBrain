version: '3'

services:
  userservice:
    build: ./BballBrain-main
    expose:
      - "8077"
    ports:
      - "8077:8077"
    environment:
      - JAVA_OPT=-Dspring.profiles.active=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/userballbrain
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - backend
  feedservice:
    build: ./B-Ball-Brain-Feed
    expose:
      - "8089"
    ports:
      - "8089:8089"
    environment:
      - JAVA_OPT=-Dspring.profiles.active=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/feedballbrain
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - backend
  uploadservice:
    build: ./BballBrain-file-upload-service
    expose:
      - "8076"
    ports:
      - "8076:8076"
    environment:
      - JAVA_OPT=-Dspring.profiles.active=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mediaballbrain
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - backend


  basketballservice:
    build: ./BballBrain-basketball
    expose:
      - "8083"
    ports:
      - "8083:8083"
    environment:
      - JAVA_OPT=-Dspring.profiles.active=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/basketballbrain
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - backend

  eureka-server:
    build: ./service-registry
    ports:
      - "8761:8761"
    environment:
      - EUREKA_SERVER_PORT=8761
    networks:
      - backend

  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: feedballbrain
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d feedballbrain"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
